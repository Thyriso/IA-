name: Build

on:
  push:
    branches: [ main ]
  pull_request:

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install build tools (Linux)
        if: runner.os == 'Linux'
        run: sudo apt-get update && sudo apt-get install -y cmake ninja-build g++

      - name: Install build tools (macOS)
        if: runner.os == 'macOS'
        run: brew install cmake ninja

      - name: Install build tools (Windows)
        if: runner.os == 'Windows'
        run: choco install -y cmake ninja

      - name: Setup Conan
        run: |
          pip install --upgrade conan
          conan profile detect --force
          conan profile update settings.compiler.cppstd=20 default

      - name: Cache Conan
        uses: actions/cache@v3
        with:
          path: ~/.conan2
          key: ${{ runner.os }}-conan-${{ hashFiles('conanfile.txt') }}
          restore-keys: ${{ runner.os }}-conan-

      - name: Conan install
        run: conan install . --output-folder=build --build=missing

      - name: Configure
        run: cmake -S . -B build -G Ninja -DCMAKE_TOOLCHAIN_FILE=build/conan_toolchain.cmake -DENABLE_TESTS=ON

      - name: Build
        run: cmake --build build

      - name: Test
        run: ctest --test-dir build --output-on-failure
